{"version":3,"file":"static/js/415.03d148fb.chunk.js","mappings":"+SACO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,6FACLC,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAU,qBAAsBC,GAVlD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACLR,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,6BAAgCQ,EAAOC,QAAQ,KAAM,MAAQR,GAV/E,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACLX,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBW,GAAWV,GAVhD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,gFACLX,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAsCV,GAVxD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gFACLX,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAsCV,GAVxD,cAUCK,EAVD,yBAYEA,GAZF,kE,iHC3BP,UA9Ba,WACT,IAAMQ,GAAWC,EAAAA,EAAAA,MACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE6BpB,EAAAA,EAAAA,MAF7B,OAEUqB,EAFV,OAGIF,EAAUE,EAAWC,KAAKC,SAH9B,sDAKU,IAAIC,MAAJ,MALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAGC,4BACE,4CACA,wBACGP,EAAOQ,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMf,GAAYgB,GAAE,kBAAaJ,GAAhD,SAAuDC,KADhDD,EAIZ,QAIV,C","sources":["moviesAPI.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nexport async function getMovies() {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get('trending/movie/day', options);\n\n  return response;\n}\n\nexport async function getMoviesByName(search) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`search/movie?query=${search.replace(/ /g, '+')}`, options);\n\n  return response;\n}\n\nexport async function getMovieById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}`, options);\n\n  return response;\n}\n\nexport async function getMovieReviewsById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}/reviews`, options);\n\n  return response;\n}\n\nexport async function getMovieCastById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}/credits`, options);\n\n  return response;\n}","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getMovies } from 'moviesAPI';\n\nconst Home = () => {\n    const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const moviesData = await getMovies();\n        setMovies(moviesData.data.results);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n      <div>\n        <h1>Trending today</h1>\n        <ul>\n          {movies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link state={{ from: location }} to={`/movies/${id}`}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n  );\n};\nexport default Home;\n"],"names":["getMovies","axios","options","params","api_key","headers","accept","response","getMoviesByName","search","replace","getMovieById","movieId","getMovieReviewsById","getMovieCastById","location","useLocation","useState","movies","setMovies","useEffect","moviesData","data","results","Error","fetchMovies","map","id","title","state","from","to"],"sourceRoot":""}