{"version":3,"file":"static/js/681.3547ec53.chunk.js","mappings":"yNA2CA,UAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,EAAU,WAFd,UAG8BI,EAAAA,EAAAA,IAAoBH,GAHlD,OAGUI,EAHV,OAIIP,EAAWO,EAAYC,KAAKC,SAC5BP,EAAU,YALd,sDAOU,IAAIQ,MAAJ,MAPV,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACR,KAEF,yBACc,aAAXF,IACC,0BACsB,IAAnBF,EAAQa,QACPb,EAAQc,KAAI,SAAAC,GACV,OACE,2BACE,wBAAKA,EAAKC,UACV,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,IACiB,IAAnBlB,EAAQa,SACP,wEAMX,C,+LCzCM,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,6FACLC,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAU,qBAAsBC,GAVlD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACLR,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,6BAAgCQ,EAAOC,QAAQ,KAAM,MAAQR,GAV/E,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,gFACLgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBhB,GAAWiB,GAVhD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCH,GAAnC,gFACLgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,YAAsCiB,GAVxD,cAUCK,EAVD,yBAYEA,GAZF,kEAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgC3B,GAAhC,gFACLgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACnBC,EAAU,CACdC,OAAQ,CACNC,QAAS,oCAEXC,QAAS,CACPC,OAAQ,qBAPP,SAUkBL,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,YAAsCiB,GAVxD,cAUCK,EAVD,yBAYEA,GAZF,kE","sources":["components/Reviews.jsx","moviesAPI.js"],"sourcesContent":["import { getMovieReviewsById } from 'moviesAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieReviewsById() {\n      try {\n        setStatus('pending');\n        const reviewsData = await getMovieReviewsById(movieId);\n        setReviews(reviewsData.data.results);\n        setStatus('resolved');\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n    fetchMovieReviewsById();\n  }, [movieId]);\n  return (\n    <div>\n      {status === 'resolved' && (\n        <ul>\n          {reviews.length !== 0 &&\n            reviews.map(item => {\n              return (\n                <li key={item.id}>\n                  <h3>{item.author}</h3>\n                  <p>{item.content}</p>\n                </li>\n              );\n            })}\n          {reviews.length === 0 && (\n            <p>We don`t have any reviews for this movie</p>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nexport async function getMovies() {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get('trending/movie/day', options);\n\n  return response;\n}\n\nexport async function getMoviesByName(search) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`search/movie?query=${search.replace(/ /g, '+')}`, options);\n\n  return response;\n}\n\nexport async function getMovieById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}`, options);\n\n  return response;\n}\n\nexport async function getMovieReviewsById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}/reviews`, options);\n\n  return response;\n}\n\nexport async function getMovieCastById(movieId) {\n  axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n  const options = {\n    params: {\n      api_key: '148118ff38ec61bf8d4b2aa895c3f69e',\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n  const response = await axios.get(`movie/${movieId}/credits`, options);\n\n  return response;\n}"],"names":["useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","getMovieReviewsById","reviewsData","data","results","Error","fetchMovieReviewsById","length","map","item","author","content","id","getMovies","axios","options","params","api_key","headers","accept","response","getMoviesByName","search","replace","getMovieById","getMovieCastById"],"sourceRoot":""}